{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Container/Container.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Container/Container.js","api/imageApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","seachImagesByTags","imgTags","setState","currentTarget","value","handleSubmit","e","preventDefault","props","onSubmit","this","className","style","searchbar","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","tags","largeImageURL","onClickModal","imageGalleryItem","imageGalleryItemImage","src","alt","onClick","defaultProps","ImageGallery","images","onImgClick","imageGallery","map","id","webformatURL","Container","children","container","axios","defaults","baseURL","searchQuery","currentPage","perPage","get","then","res","data","hits","Button","modalRoot","document","querySelector","Modal","handleKeyDown","node","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","backdropClick","createPortal","overlay","modal","App","isLoading","showModal","modalImg","fetchImg","options","Api","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","finally","onChangeQuery","trim","toggleModal","openModal","console","log","prevProps","shouldRenderLoadMoreButton","length","message","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2197819c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1NQjw\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__1xvEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__TyxJd\",\"modal\":\"Modal_modal__24mtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1V09L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Q3NUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Stg5\"};","import React, { Component } from 'react';\nimport style from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  seachImagesByTags = imgTags => {\n    this.setState({ query: imgTags.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className={style.searchbar}>\n        <form className={style.searchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={style.searchFormButton}>\n            <span className={style.searchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={style.searchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={this.seachImagesByTags}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from 'react';\nimport style from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ image, tags, largeImageURL, onClickModal }) => {\n  return (\n    <li className={style.imageGalleryItem}>\n      <img\n        className={style.imageGalleryItemImage}\n        src={image}\n        alt={tags}\n        onClick={() => onClickModal(largeImageURL)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.defaultProps = {\n  image:\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled.png',\n  tags: '',\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string,\n  tags: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport style from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onImgClick }) => (\n  <ul className={style.imageGallery}>\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        image={webformatURL}\n        tags={tags}\n        largeImageURL={largeImageURL}\n        onClickModal={onImgClick}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.shape.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={style.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst apiKey = '21973374-56c885108110b7a34a7b7e2cd';\n\nconst fetchImg = ({ searchQuery, currentPage = 1, perPage = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&per_page=${perPage}&key=${apiKey}&page=${currentPage}`,\n    )\n    .then(res => res.data.hits);\n};\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { fetchImg };\n","import React from 'react';\nimport style from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick} className={style.Button}>\n      Load more ...\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport style from './Modal.module.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.node === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const backdropClick = this.handleBackdropClick;\n\n    return createPortal(\n      <div className={style.overlay} onClick={backdropClick}>\n        <div className={style.modal}>{children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import Seachbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Container from './components/Container';\nimport { Component } from 'react';\n// import axios from 'axios';\nimport Api from './api/imageApi';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Button from './components/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    showModal: false,\n    searchQuery: '',\n    currentPage: 1,\n    modalImg: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImg();\n    }\n  }\n\n  fetchImg = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    if (!searchQuery) {\n      return;\n    }\n\n    Api.fetchImg(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query.trim(),\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState({\n      showModal: false,\n      modalImg: '',\n    });\n  };\n\n  openModal = largeImageURL => {\n    this.setState({\n      showModal: true,\n      modalImg: largeImageURL,\n    });\n\n    console.log(this.state.modalImg);\n  };\n\n  render() {\n    const { images, isLoading, error, showModal, modalImg } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        <Seachbar onSubmit={this.onChangeQuery} />\n\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n\n        <Container>\n          {isLoading && (\n            <Loader\n              type=\"Circles\"\n              color=\"#3f51b5\"\n              height={100}\n              width={100}\n              timeout={3000}\n            />\n          )}\n          {<ImageGallery images={images} onImgClick={this.openModal} />}\n\n          {shouldRenderLoadMoreButton && <Button onClick={this.fetchImg} />}\n\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={modalImg} alt=\"\" />\n            </Modal>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3eG6Z\",\"searchForm\":\"Searchbar_searchForm__i2LPf\",\"searchFormButton\":\"Searchbar_searchFormButton__2uzzQ\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__3Fixv\",\"searchFormInput\":\"Searchbar_searchFormInput__36qCh\"};"],"sourceRoot":""}